#include "/Engine/Public/Platform.ush"
#include "TerrainShaderUtils.ush"

#define WATER(index) WaterHumidityData[index].x
#define HUMIDITY(index) WaterHumidityData[index].y

int Size;
float Step;
RWStructuredBuffer<float2> WaterHumidityData;

[NUM_THREADS]
void Main(uint3 id : SV_DispatchThreadID)
{
	// HUMIDITY(INDEX) = max(HUMIDITY(INDEX), WATER(INDEX));
	// HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(L_INDEX));
	// HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(R_INDEX));
	// HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(T_INDEX));
	// HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(B_INDEX));
	// HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(LT_INDEX));
	// HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(LB_INDEX));
	// HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(RT_INDEX));
	// HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(RB_INDEX));

	if(WATER(INDEX) > 1.0f)
	{
		HUMIDITY(INDEX) = 1.0f;
	}
	else
	{
		HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(L_INDEX));
		HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(R_INDEX));
		HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(T_INDEX));
		HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(B_INDEX));
		HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(LT_INDEX));
		HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(LB_INDEX));
		HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(RT_INDEX));
		HUMIDITY(INDEX) = max(HUMIDITY(INDEX), HUMIDITY(RB_INDEX));
		HUMIDITY(INDEX) = HUMIDITY(INDEX) - Step;
	}
}